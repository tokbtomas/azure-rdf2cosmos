{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccount": {
            "type": "object",
            "metadata": {
                "description": "Required json object format -
                storageAccount {
                    tag [
                        string
                    ],
                    storageAccountName [
                        string
                    ],
                    containers [
                        array
                    ],
                    numberOfInstances [
                        int
                    ],
                    location [
                        string
                    ],
                    storageVersion [
                        string
                    ],
                    storageSKU [
                        string
                    ]
                }
                "
            }
        },
        "resourceGroupName": {
            "type": "string"
        },
        "storageAccountBaseName": {
            "type": "string"
        },
        "artifactsSaSasToken": {
            "type": "securestring"
        },
        "artifactsSaBaseUri": {
            "type": "string",
            "metadata": {
                "description": "The Url of the storage account and Container where your Resources are stored"
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "Nothing",
            "metadata": {
                "description": "The name of the Keyvault where to store the storage key as secrets."
            }
        },
        "enableContainerPolicy": {
            "type": "bool",
            "defaultValue": false
        }
    },
    "variables": {
        "baseTemplatePath": "/BaseTemplates/",
        "defaultContainer": [
            "default"
        ]
    },
    "resources": [
        {
            "comments": "Create storage account in primary region for AppInsight BCDR",
            "name": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag)
                                ,parameters('storageAccount').storageAccountName),
                            if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)),'-createStorage')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "copy": {
                "name": "factoryStorageCopy",
                "count": "[parameters('storageAccount').numberOfInstances]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('artifactsSaBaseUri'),variables('baseTemplatePath'),'template-storageAccount.json', parameters('artifactsSaSasToken'))]"
                },
                "parameters": {
                    "StorageAccountName": {
                        "value": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                             concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                                             parameters('storageAccount').storageAccountName),
                                          if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)))]"
                    },
                    "storageSKU": {
                        "value": "[parameters('storageAccount').storageSKU]"
                    },
                    "location": {
                        "value": "[parameters('storageAccount').location]"
                    },
                    "storageVersion": {
                        "value": "[parameters('storageAccount').storageVersion]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    }
                }
            }
        },
        {
            "name": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                                parameters('storageAccount').storageAccountName),
                            if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)),'-createContainer')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('resourceGroupName')]",
            "apiVersion": "2019-10-01",
            "copy": {
                "name": "factoryStorageContainerCopy",
                "count": "[parameters('storageAccount').numberOfInstances]"
            },
            "dependsOn": [
                "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                            concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                            parameters('storageAccount').storageAccountName),
                        if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)),'-createStorage')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('artifactsSaBaseUri'),variables('baseTemplatePath'),'template-storageAccount-blob-container.json', parameters('artifactsSaSasToken'))]"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                             concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                                             parameters('storageAccount').storageAccountName),
                                          if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)))]"
                    },
                    "containerNames": {
                        "value": "[if(greater(length(parameters('storageAccount').Containers), 0), parameters('storageAccount').Containers,variables('defaultContainer'))]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('enableContainerPolicy')]",
            "comments": "Deploy snapshot deletion container policy",
            "name": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                                parameters('storageAccount').storageAccountName),
                             if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)),'-addContainerPolicy')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "copy": {
                "name": "factoryContainerPolicy",
                "count": "[parameters('storageAccount').numberOfInstances]"
            },
            "dependsOn": [
                "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                            concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                            parameters('storageAccount').storageAccountName),
                         if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)),'-createStorage')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('artifactsSaBaseUri'),variables('baseTemplatePath'),'template-storageAccount-blob-container-policy.json', parameters('artifactsSaSasToken'))]"
                },
                "parameters": {
                    "StorageAccountName": {
                        "value": "[concat(if(equals(tolower(parameters('storageAccount').storageAccountName),'dynamic'),
                                             concat(parameters('storageAccountBaseName'),parameters('storageAccount').tag),
                                             parameters('storageAccount').storageAccountName),
                                          if(equals(parameters('storageAccount').numberOfInstances,1),'', copyindex(1)))]"
                    }
                }
            }
        }
    ]
}
