{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsSaBaseUri": {
      "type": "string"
    },
    "artifactsSaSasToken": {
      "type": "securestring"
    },
    "settings": {
      "type": "Object",
      "metadata": {
        "description": "This is coming from the parameter File under Parameters"
      }
    },
    "resourceNames": {
      "type": "Object",
      "metadata": {
        "description": "This is coming from the parameter File under Parameters"
      }
    },
    "date": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "accountName": "[concat(parameters('resourceNames').cosmosDbBaseName,parameters('settings').cosmosDbData.tag)]",
    "singleLocation": {
      "type": "Object",
      "value": [
        {
          "locationName": "[parameters('settings').common.region]",
          "failoverPriority": 0,
          "isZoneRedundant": false
        }
      ]
    },
    "geoLocations": {
      "type": "Object",
      "value": [
        {
          "locationName": "[parameters('settings').common.region]",
          "failoverPriority": 0,
          "isZoneRedundant": false
        },
        {
          "locationName": "[parameters('settings').cosmosDbData.replicationLocations.secondaryregion]",
          "failoverPriority": 1,
          "isZoneRedundant": false
        }
      ]
    },
    "cosmosDbIpRules": {
      "type": "Object",
      "value": [
        {
          "ipAddressOrRange": "40.130.201.124"
        },
        {
          "ipAddressOrRange": "167.220.148.69"
        },
        {
          "ipAddressOrRange": "172.124.75.3"
        },
        {
          "ipAddressOrRange": "104.42.195.92"
        },
        {
          "ipAddressOrRange": "40.76.54.131"
        },
        {
          "ipAddressOrRange": "52.176.6.30"
        },
        {
          "ipAddressOrRange": "52.169.50.45"
        },
        {
          "ipAddressOrRange": "52.187.184.26"
        },
        {
          "ipAddressOrRange": "0.0.0.0"
        }
      ]
    }
  },
  "resources": [
    {
      "name": "[concat('createCosmosDBAccount-', parameters('date'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsSaBaseUri'), parameters('resourceNames').baseTemplatePath, 'template-cosmosdb-accounts.json', parameters('artifactsSaSasToken'))]"
        },
        "parameters": {
          "artifactsSaBaseUri": {
            "value": "[parameters('artifactsSaBaseUri')]"
          },
          "artifactsSaSasToken": {
            "value": "[parameters('artifactsSaSasToken')]"
          },
          "accountName": {
            "value": "[variables('accountName')]"
          },
          "location": {
            "value": "[parameters('settings').common.region]"
          },
          "enableFreeTier": {
            "value": "[parameters('settings').cosmosDbData.enableFreeTier]"
          },
          "cosmosAPIType": {
            "value": "[parameters('settings').cosmosDbData.apiType]"
          },
          "ipRules": {
            "value": "[variables('cosmosDbIpRules')]"
          },
          "APICapability":{
             "value": "[parameters('settings').cosmosDbData.enableApiCapability]"
          },
          "locations": {
            "value": "[if(equals(parameters('settings').cosmosDbData.replicationLocations.secondaryregion,'None'), 
                        variables('singleLocation'),
                         variables('geoLocations'))]"
          },
          "defaultConsistencyLevel": {
            "value": "[parameters('settings').cosmosDbData.consistecyLevel]"
          },
          "maxStalenessPrefix": {
            "value": "[parameters('settings').cosmosDbData.maxStalenessPrefix]"
          },
          "maxIntervalInSeconds": {
            "value": "[parameters('settings').cosmosDbData.maxIntervalInSeconds]"
          },
          "resourceNames": {
            "value": "[parameters('resourceNames')]"
          },
          "workspaceId": {
            "value": "[parameters('resourceNames').workspaceId]"
          }
        }
      }
    }
  ],
  "outputs": {
  }
}
