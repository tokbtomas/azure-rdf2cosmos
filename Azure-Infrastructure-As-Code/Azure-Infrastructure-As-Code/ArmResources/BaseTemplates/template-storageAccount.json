{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Specify the storage account name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify a location for the resources."
      }
    },
    "storageSKU": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "metadata": {
        "description": "Specify the storage account type."
      }
    },
    "storageVersion": {
      "type": "string",
      "defaultValue": "StorageV2"
    },
    "accountSasProperties": {
      "type": "object",
      "defaultValue": {
        "signedServices": "b",
        "signedPermission": "w",
        "signedResourceTypes": "sco",
        "keyToSign": "key1",
        "signedExpiry": "[dateTimeAdd(utcNow('u'),'PT1H')]"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "Nothing",
      "metadata": {
        "description": "The name of the Keyvault where to store the secrets"
      }
    },
    "generateSasToken": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Will generate a 1 hour Read Sas Token"
      }
    }
  },
  "variables": {
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageSKU')]"
      },
      "kind": "[parameters('storageVersion')]",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "condition": "[not(equals(parameters('keyVaultName'), 'Nothing'))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', concat('kv-',parameters('storageAccountName'),'-ConnectionString'))]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
      }
    },
    {
      "condition": "[not(equals(parameters('keyVaultName'), 'Nothing'))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', concat('kv-',parameters('storageAccountName')))]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "value": "[listKeys(variables('storageAccountid'),'2015-05-01-preview').key1]"
      }
    }
  ],
  "outputs": {
    "storageEndpoint": {
      "type": "object",
      "value": "[reference(parameters('storageAccountName')).primaryEndpoints]"
    },
    "storageId": {
      "type": "string",
      "value": "[variables('storageAccountid')]"
    },
    "SasToken": {
      "type": "string",
      "value": "[if(parameters('generateSasToken'),listAccountSas(parameters('storageAccountName'), '2019-06-01', parameters('accountSasProperties')).accountSasToken,'')]"
    }
  }
}